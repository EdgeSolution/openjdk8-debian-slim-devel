version: '3'
services:
     androidlink: 
        image: edgesolution/androiddm-javaenv-slim:v1.0
        restart: always
        depends_on:
                - mqtt
                - db
        volumes:
                - ./java-env/vnctoken:/root/adv/vnctoken 
                - ./java-env/logs:/root/logs
                - /sys:/sys
        ports: 
                - "8080:8080"
        command: /root/adv/run.sh
        container_name: m2mserver
        links:
                - "mqtt"
                - "db"
        networks: 
                - advnet
        environment: 
                - TZ=Asia/Shanghai
     mqtt:
        image: edgesolution/androiddm-mosquitto:v1.0
        restart: always
        ports: 
                - "1883:1883"
                - "11880:11880"
        container_name: m2m_mosquitto
        networks: 
              - advnet
     db:
        image: postgres:9.4
        restart: always
        environment:
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: aimlink
        ports:
                - "5432:5432"
        container_name: m2m-postgresSQL
        networks: 
              - advnet
     astore:
        image: edgesolution/androiddm-astore-slim:v1.0
        restart: always
        depends_on:
                - db
        volumes:
                - ./astore/logs:/home/logs
        ports:
                - "30001:30019"
                - "30002:80"
        command: /root/adv/run.sh
        container_name: aimlink_astore
        links:
                - "db"
        networks: 
                - advnet
        environment: 
                - TZ=Asia/Shanghai
     novnc:
        image: edgesolution/androiddm-novnc:v1.0
        restart: always
        volumes:
                - ./java-env/vnctoken/:/root/adv/vnctoken/
                - ./noVnc/log/:/root/adv/log
        ports:
                - "9191:9191"
                - "5901:5901"
                - "5500:5500"
        command: /root/adv/run.sh
        container_name: m2m-novnc
        networks: 
                - advnet
     dockertools:
        image: portainer/portainer
        restart: always
        volumes: 
                - /var/run/docker.sock:/var/run/docker.sock
                - ./portainer_data:/data
        ports: 
                - "8000:8000"
                - "9000:9000"
        container_name: portainer
networks:
    advnet:
        driver: bridge
